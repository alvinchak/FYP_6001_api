{
  "version": 3,
  "sources": ["../../tools/nutri-score.ts"],
  "sourcesContent": ["export const nutriPoint = (foodtype: any,energy: any,sugars: any,satuFat: any,sodium: any,fruitVeget: any,fibre: any,protein: any) => {\n  \n  let negPoint1:any = 0, negPoint2:any = 0, negPoint3:any = 0, negPoint4:any = 0, posPoint1:any = 0, posPoint2:any = 0, posPoint3:any = 0, finalScore:any = 0, grade = \"Undefined\";\n  \n  if (foodtype.toLowerCase()==\"food\" || foodtype.toLowerCase()==\"foods\") {\n\n      //Negative point: Engergy\n      switch (true) {\n        case(energy>=800): negPoint1 = 10; break;\n        case(energy>=720): negPoint1 = 9; break;\n        case(energy>=640): negPoint1 = 8; break;\n        case(energy>=560): negPoint1 = 7; break;\n        case(energy>=480): negPoint1 = 6; break;\n        case(energy>=400): negPoint1 = 5; break;\n        case(energy>=320): negPoint1 = 4; break;\n        case(energy>=240): negPoint1 = 3; break;\n        case(energy>=160): negPoint1 = 2; break;\n        case(energy>=80): negPoint1 = 1; break;\n        default: negPoint1 = 0;\n      }\n\n      //Negative point: Simple sugars\n      switch (true) {\n        case(sugars>=45000): negPoint2 = 10; break;\n        case(sugars>=40000): negPoint2 = 9; break;\n        case(sugars>=36000): negPoint2 = 8; break;\n        case(sugars>=31000): negPoint2 = 7; break;\n        case(sugars>=27000): negPoint2 = 6; break;\n        case(sugars>=22500): negPoint2 = 5; break;\n        case(sugars>=18000): negPoint2 = 4; break;\n        case(sugars>=13500): negPoint2 = 3; break;\n        case(sugars>=9000): negPoint2 = 2; break;\n        case(sugars>=4500): negPoint2 = 1; break;\n        default: negPoint2 = 0;\n      }\n\n      //Negative point: Saturated fats\n      switch (true) {\n        case(satuFat>=10000): negPoint3 = 10; break;\n        case(satuFat>=9000): negPoint3 = 9; break;\n        case(satuFat>=8000): negPoint3 = 8; break;\n        case(satuFat>=7000): negPoint3 = 7; break;\n        case(satuFat>=6000): negPoint3 = 6; break;\n        case(satuFat>=5000): negPoint3 = 5; break;\n        case(satuFat>=4000): negPoint3 = 4; break;\n        case(satuFat>=3000): negPoint3 = 3; break;\n        case(satuFat>=2000): negPoint3 = 2; break;\n        case(satuFat>1000): negPoint3 = 1; break;\n        default: negPoint3 = 0;\n      }\n\n      //Negative point: Salt\n      switch (true) {\n        case(sodium>=900): negPoint4 = 10; break;\n        case(sodium>=810): negPoint4 = 9; break;\n        case(sodium>=720): negPoint4 = 8; break;\n        case(sodium>=630): negPoint4 = 7; break;\n        case(sodium>=540): negPoint4 = 6; break;\n        case(sodium>=450): negPoint4 = 5; break;\n        case(sodium>=360): negPoint4 = 4; break;\n        case(sodium>=270): negPoint4 = 3; break;\n        case(sodium>=180): negPoint4 = 2; break;\n        case(sodium>=90): negPoint4 = 1; break;\n        default: negPoint4 = 0;\n      }\n\n      //Positive point: Fruit and vegetables\n      switch (true) {\n        case(fruitVeget>=80): posPoint1 = 5; break;\n        case(fruitVeget>=60): posPoint1 = 2; break;\n        case(fruitVeget>=40): posPoint1 = 1; break;\n        default: posPoint1 = 0;\n      }\n\n      //Positive point: Fibre\n      switch (true) {\n        case(fibre>=3500): posPoint2 = 5; break;\n        case(fibre>=2800): posPoint2 = 4; break;\n        case(fibre>=2100): posPoint2 = 3; break;\n        case(fibre>=1400): posPoint2 = 2; break;\n        case(fibre>=700): posPoint2 = 1; break;\n        default: posPoint2 = 0;\n      }\n\n      //Positive point: Protein\n      switch (true) {\n        case(protein>=8000): posPoint3 = 5; break;\n        case(protein>=6400): posPoint3 = 4; break;\n        case(protein>=4800): posPoint3 = 3; break;\n        case(protein>=3200): posPoint3 = 2; break;\n        case(protein>=1600): posPoint3 = 1; break;\n        default: posPoint3 = 0;\n      }\n\n    console.log(\"negPoint1:\"+negPoint1)\n    console.log(\"negPoint2:\"+negPoint2)\n    console.log(\"negPoint3:\"+negPoint3)\n    console.log(\"negPoint4:\"+negPoint4)\n    console.log(\"posPoint1:\"+posPoint1)\n    console.log(\"posPoint2:\"+posPoint2)\n\n      finalScore = negPoint1 + negPoint2 + negPoint3 + negPoint4 - posPoint1 - posPoint2 - posPoint3\n      finalScore = finalScore.toFixed(1);\n    \n      switch (true) {\n        case(finalScore <= -1): grade = \"A\"; break;\n        case(finalScore <= 2): grade = \"B\"; break;\n        case(finalScore <= 10): grade = \"C\"; break;\n        case(finalScore <= 18): grade = \"D\"; break;\n        case(finalScore <= 40): grade = \"E\"; break;\n      }\n    \n      return [finalScore,grade];\n    \n\n  } else if (foodtype.toLowerCase()==\"beverage\" || foodtype.toLowerCase()==\"beverages\") {\n    \n      //Negative point: Engergy\n      switch (true) {\n        case(energy>=64.5): negPoint1 = 10; break;\n        case(energy>=57.4): negPoint1 = 9; break;\n        case(energy>=50.2): negPoint1 = 8; break;\n        case(energy>=43.0): negPoint1 = 7; break;\n        case(energy>=35.9): negPoint1 = 6; break;\n        case(energy>=28.5): negPoint1 = 5; break;\n        case(energy>=21.5): negPoint1 = 4; break;\n        case(energy>=14.3): negPoint1 = 3; break;\n        case(energy>=7.2): negPoint1 = 2; break;\n        case(energy>0): negPoint1 = 1; break;\n        default: negPoint1 = 0;\n      }\n\n      //Negative point: Simple sugarss\n      switch (true) {\n        case(sugars>=13500): negPoint2 = 10; break;\n        case(sugars>=12000): negPoint2 = 9; break;\n        case(sugars>=10500): negPoint2 = 8; break;\n        case(sugars>=9000): negPoint2 = 7; break;\n        case(sugars>=7500): negPoint2 = 6; break;\n        case(sugars>=6000): negPoint2 = 5; break;\n        case(sugars>=4500): negPoint2 = 4; break;\n        case(sugars>=3000): negPoint2 = 3; break;\n        case(sugars>=1500): negPoint2 = 2; break;\n        case(sugars>=0): negPoint2 = 1; break;\n        default: negPoint2 = 0;\n      }\n\n      //Negative point: Saturated fats\n      switch (true) {\n        case(satuFat>=10000): negPoint3 = 10; break;\n        case(satuFat>=9000): negPoint3 = 9; break;\n        case(satuFat>=8000): negPoint3 = 8; break;\n        case(satuFat>=7000): negPoint3 = 7; break;\n        case(satuFat>=6000): negPoint3 = 6; break;\n        case(satuFat>=5000): negPoint3 = 5; break;\n        case(satuFat>=4000): negPoint3 = 4; break;\n        case(satuFat>=3000): negPoint3 = 3; break;\n        case(satuFat>=2000): negPoint3 = 2; break;\n        case(satuFat>1000): negPoint3 = 1; break;\n        default: negPoint3 = 0;\n      }\n\n      //Negative point: Salt\n      switch (true) {\n        case(sodium>=900): negPoint4 = 10; break;\n        case(sodium>=810): negPoint4 = 9; break;\n        case(sodium>=720): negPoint4 = 8; break;\n        case(sodium>=630): negPoint4 = 7; break;\n        case(sodium>=540): negPoint4 = 6; break;\n        case(sodium>=450): negPoint4 = 5; break;\n        case(sodium>=360): negPoint4 = 4; break;\n        case(sodium>=270): negPoint4 = 3; break;\n        case(sodium>=180): negPoint4 = 2; break;\n        case(sodium>=90): negPoint4 = 1; break;\n        default: negPoint4 = 0;\n      }\n\n      //Positive point: Fruit and vegetables\n      switch (true) {\n        case(fruitVeget>=80): posPoint1 = 10; break;\n        case(fruitVeget>=60): posPoint1 = 4; break;\n        case(fruitVeget>=40): posPoint1 = 2; break;\n        default: posPoint1 = 0;\n      }\n\n      //Positive point: Fibre\n      switch (true) {\n        case(fibre>=3500): posPoint2 = 5; break;\n        case(fibre>=2800): posPoint2 = 4; break;\n        case(fibre>=2100): posPoint2 = 3; break;\n        case(fibre>=1400): posPoint2 = 2; break;\n        case(fibre>=700): posPoint2 = 1; break;\n        default: posPoint2 = 0;\n      }\n\n      //Positive point: Protein\n      switch (true) {\n        case(protein>=8000): posPoint3 = 5; break;\n        case(protein>=6400): posPoint3 = 4; break;\n        case(protein>=4800): posPoint3 = 3; break;\n        case(protein>=3200): posPoint3 = 2; break;\n        case(protein>=1600): posPoint3 = 1; break;\n        default: posPoint3 = 0;\n      }\n\n      finalScore = negPoint1 + negPoint2 + negPoint3 + negPoint4 - posPoint1 - posPoint2 - posPoint3\n      finalScore = finalScore.toFixed(1);\n    \n      switch (true) {\n        case(finalScore <= -1): grade = \"A\"; break;\n        case(finalScore <= 2): grade = \"B\"; break;\n        case(finalScore <= 10): grade = \"C\"; break;\n        case(finalScore <= 18): grade = \"D\"; break;\n        case(finalScore <= 40): grade = \"E\"; break;\n      }\n    \n      return [finalScore,grade];\n\n  }\n\n}"],
  "mappings": "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",
  "names": []
}
