{
  "version": 3,
  "sources": ["../../models/products.ts"],
  "sourcesContent": ["import * as db from '../helpers/database';\n\nexport const getTopProducts = async ()=> {\n  const query = `SELECT B.productbarcode, B.productName, B.manufacturer, B.score, B.grade, B.foodType, B.energy, B.sugars, B.satuFat, B.sodium, B.fruitVeget, B.fibre, B.protein FROM\n(SELECT productbarcode,MAX(id) as id,COUNT(*) AS total FROM products GROUP BY productbarcode) AS A\nLEFT JOIN\n(SELECT * FROM products) AS B\nON A.id=B.id ORDER BY A.total DESC, B.id DESC`;\n  const data = await db.run_query(query, null);\n  return data;\n}\n\nexport const add = async (product: any)=> {\n  const keys = Object.keys(product);\n  const values = Object.values(product);\n  console.log(keys);\n  console.log(values);\n  const key = keys.join(',');\n  let parm = '';\n  for (let i = 0; i<values.length; i++) {parm += '?,'}\n  parm = parm.slice(0,-1);\n  const sql = `INSERT INTO products (${key}) VALUES (${parm})`;\n  try {\n    await db.run_insert(sql, values);\n    return {status: 201};\n  } catch (err: any) {\n    return err;\n  }\n}"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAoB;AAEb,MAAM,iBAAiB,YAAW;AACvC,QAAM,QAAQ;AAAA;AAAA;AAAA;AAAA;AAKd,QAAM,OAAO,MAAM,GAAG,UAAU,OAAO,IAAI;AAC3C,SAAO;AACT;AAEO,MAAM,MAAM,OAAO,YAAgB;AACxC,QAAM,OAAO,OAAO,KAAK,OAAO;AAChC,QAAM,SAAS,OAAO,OAAO,OAAO;AACpC,UAAQ,IAAI,IAAI;AAChB,UAAQ,IAAI,MAAM;AAClB,QAAM,MAAM,KAAK,KAAK,GAAG;AACzB,MAAI,OAAO;AACX,WAAS,IAAI,GAAG,IAAE,OAAO,QAAQ,KAAK;AAAC,YAAQ;AAAA,EAAI;AACnD,SAAO,KAAK,MAAM,GAAE,EAAE;AACtB,QAAM,MAAM,yBAAyB,gBAAgB;AACrD,MAAI;AACF,UAAM,GAAG,WAAW,KAAK,MAAM;AAC/B,WAAO,EAAC,QAAQ,IAAG;AAAA,EACrB,SAAS,KAAP;AACA,WAAO;AAAA,EACT;AACF;",
  "names": []
}
